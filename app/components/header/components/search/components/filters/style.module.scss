@use "/app/styles/variable.scss" as color;

.filters {
	width: 0px;
	height: 0px;
	padding: 0rem;
	overflow: hidden;
	background-color: rgba(color.$light-blue, 0.06);
	border-radius: 20px;
	transition: 0.2s ease-in;
	transition-property: width;
	flex-direction: column;
	display: flex;
	margin-left: -10%;

	&.show {
		width: 500px;
		height: auto;
		padding: 1rem;
		margin-left: 0;

		.wrapper {
			padding: inherit;
			opacity: 1;
			pointer-events: all;
		}
	}

	.wrapper {
		overflow: auto;
		margin: -1rem;
		opacity: 0;
		pointer-events: none;
		transition: 1s ease-in-out;
		transition-property: opacity;
		max-height: 300px;

		&__scroll {
			overflow-y: auto;
			padding: 0px 0.3rem;
		}

		.label {
			margin-bottom: 1.5rem;

			p {
				margin-bottom: 5px;
				font-weight: 500;
				font-size: 0.75rem;
			}

			.accordion {
				.header {
					padding: 0.5rem;
					box-shadow: none;
					color: color.$black-color1;
					font-size: 0.9rem;

					// &:not(.collapsed) {
					// 	background-color: red;
					// }
				}

				.content {
					max-height: 200px;
					overflow: auto;
				}
			}
		}

		.dateCombo {
			display: flex;
			flex-direction: column;
			gap: 0.5rem;
		}
	}

	.buttonGroup {
		display: flex;
		justify-content: space-between;
		align-items: center;
		gap: 8px;
		margin-top: 2rem;
		flex-wrap: wrap;

		button {
			padding: 0.3em 2em;
			border: none;
			border-radius: 4px;
			flex: 1;

			&:first-child {
				background-color: transparent;
				color: color.$error1;
				border: 1px solid color.$error1;

				&:active {
					background-color: rgba(color.$gray-color1, 0.3);
				}
			}

			&:last-child {
				background-color: color.$blue;
				color: white;
				box-shadow: 0px 0px 6px 6px rgba(color.$blue, 0.1);

				&:active {
					background-color: color.$light-blue;
				}
			}
		}
	}
}

.smallScreenFilters {
	position: fixed;
	bottom: 0;
	right: 0;
	width: 100%;
	background-color: white;
	border-top-left-radius: 20px;
	border-top-right-radius: 20px;
	opacity: 0;
	pointer-events: none;
	transform: translateY(200px) scale(1.5);
	transition: 0.2s ease-in-out;
	transition-property: opacity, transform;

	&.--show {
		opacity: 1;
		pointer-events: all;
		transform: translateY(0px) scale(1);
	}

	&__wrapper {
		width: 100%;
		position: relative;
		outline: 100vh solid rgba(black, 0.2);
		border-top-left-radius: inherit;
		border-top-right-radius: inherit;

		.container {
			width: 100%;
		}
	}
}
