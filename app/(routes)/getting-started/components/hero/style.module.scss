@use "/app/styles/variable.scss" as color;

$sizes: 1 max(10%, 0vh) min(17%, 25vw), 2 max(72%, 40vh) max(10%, 0vw),
  3 max(10%, 10vh) max(80%, 10vw), 4 max(92%, 5vh) max(85%, 50vw);

.hero {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  overflow: hidden;
  flex: 1;
  position: relative;

  .icons {
    border-radius: 50%;
    overflow: hidden;
    padding: 0.5rem;
    background-color: rgba(color.$gray-color, 0.1);
    position: absolute;
    z-index: 1;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    transform-origin: center center;
    pointer-events: none;
    opacity: 0;

    @each $key, $top, $left in $sizes {
      &:nth-child(#{$key}) {
        @keyframes zoom-#{$key} {
          0% {
            top: 50%;
            left: 50%;
          }

          100% {
            top: $top;
            left: $left;
            opacity: 0.8;
          }
        }

        animation: zoom-#{$key} 0.8s ease-out forwards;
        animation-delay: 0.5s;
      }
    }
  }

  .placeholderWrapper {
    width: 100%;
    flex: 1;
    position: relative;
    margin-bottom: 1rem;
    display: flex;
    justify-content: center;
    align-items: flex-end;
    padding: 1rem;
    overflow: hidden;

    & > div {
      transform: translateY(100%) scale(0);

      @keyframes pop {
        0% {
          transform: translateY(100%) scale(0);
        }

        50% {
          transform: translateY(0%) scale(1.1);
        }
        100% {
          transform: scale(1);
        }
      }
      animation: pop 1s ease-in-out forwards;
    }

    &::after {
      content: "";
      position: absolute;
      width: 100%;
      height: 100%;
      left: 0;
      top: 0;
      background: linear-gradient(
        0deg,
        rgba(255, 255, 255, 1) 0%,
        rgba(255, 255, 255, 0.6) 29%,
        rgba(255, 255, 255, 0) 100%
      );
    }
  }

  .placeHolder {
    $color: rgba(color.$gray-color1, 0.5);

    aside {
      display: flex;
      flex-direction: column;
      padding-right: 0.5rem;
      border-right: 1px solid $color;
      margin-right: 0.5rem;

      div {
        height: 10px;
        border-radius: 8px;
        width: 30px;
        background-color: $color;
        margin-bottom: 0.5rem;
      }
    }

    main {
      width: 100%;

      span {
        font-size: 0.7rem;
        font-weight: 500;
      }

      .folder {
        display: flex;
        gap: 5px;
        margin: 0.4rem 0rem;
        flex-wrap: wrap;

        div {
          height: 10px;
          background-color: $color;
          border-radius: 5px;
          flex-basis: 30px;
          flex-grow: 1;
        }
      }

      .files {
        width: 100%;
        border-spacing: 50px;

        tbody {
          tr {
            td {
              div {
                height: 12px;
                background-color: $color;
                border-radius: 5px;
              }
            }
          }
        }
      }
    }

    .download {
      width: 30px;
      height: 30px;
      border-radius: 50%;
      background-color: color.$primary-color;
      color: white;

      display: flex;
      justify-content: center;
      align-items: center;
      position: absolute;
      right: 20px;
      bottom: 15px;
      box-shadow: 0px 0px 0px 10px rgba(black, 0.1);
    }
  }

  .form {
    p {
      display: flex;
      gap: 4px;
      align-items: center;
      text-align: center;

      input {
        align-self: flex-start;
      }

      span {
        color: color.$gray-color;
        font-size: 0.8rem;
        line-height: 1em;
        width: fit-content;
      }
    }
  }
}

@container (max-width: 330px) {
  .hero {
    .form {
      h4 {
        font-size: 1rem;
      }

      input {
        font-size: 1.5rem;
      }

      p {
        max-width: 250px;
      }
    }
  }
}
